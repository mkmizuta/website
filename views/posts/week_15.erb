date: 2014-02-21

<h1>Factory Girl</h1>

<p>
  One of the many things we're learning in Ada is TDD (test driven development) using Rspec.  Because browsers don't talk to databases during tests, we have to create a fake environment and the conditions to test our specs against.  Factory Girl Rails is great for that. 
</p>
<p>
  Factories are kept in <code>spec/factories.rb</code>.  
</p>
<p>
  Here's a factory we created to test <code>users</code> for our Pea Patch Project:
   
  <pre><code>
  FactoryGirl.define do
    factory :user do
      username 'farmer'
      email    'farmer@farmer.com'     
      uid      '1'
      admin    true
    end
  end
  </code></pre>

</p>
<p>
  For <code>:user</code>, we're setting default values for the four items we're testing in the <code>user model</code>: <code>username</code>, <code>email</code>, <code>uid</code> and <code>admin</code> so that when we run our specs, we'll have something to test against. 
</p>
<p>
  In <code>spec/users_controller_spec.rb</code>, one example of how Factory Girl is used is:

  <pre><code>
    describe "PATCH 'update'" do
      let(:user) { create(:user) }
      before do 
        session[:id] = user.id
      end
  </code></pre>

  where <code> let(:user) { create(:user) }</code> will run if specific methods are called, and because of <code>create</code> will attempt to save them.
</p>
<p>
  Alternatively, we could use <code>let!</code> when we want to test things that are always evaluated.
</p>


